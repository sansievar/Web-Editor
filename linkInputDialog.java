package SantiagoSierraLab3;

/**
 * @author sansi
 * 
 */
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.io.*;

public class linkInputDialog extends javax.swing.JFrame implements ActionListener, webIntegrator {
    
    private final String boilerplate = "<!DOCTYPE html>\n" +
"<html>\n" +
"\t<head>\n" +
"\t\t<title>Link</title>\n" +
"\t\t<meta charset=\"UTF-8\">\n" +
"\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n" +
"\t</head>\n" +
"\t<body>\n" +
"\t\t<nav onChange=\"location.href=this[selectedIndex].value\">\n" +
"\t\t</nav>\n" +
"\t</body>\n" +
"</html>";
    
     /**
     * Creates new form link
     */
    public linkInputDialog() {
        initComponents();
        txtDoc.setText(boilerplate);
        btnReset.addActionListener(this);
        btnAdd.addActionListener(this);
        btnSave.addActionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtDisplay = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtURL = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDoc = new javax.swing.JTextArea();
        btnSave = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Link Generator");

        jLabel1.setText("URL");

        jLabel2.setText("Display Text");

        btnAdd.setText("Add Link");

        txtDoc.setColumns(20);
        txtDoc.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        txtDoc.setRows(5);
        txtDoc.setTabSize(2);
        jScrollPane1.setViewportView(txtDoc);

        btnSave.setText("Save");

        btnReset.setText("Reset");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtURL)
                            .addComponent(txtDisplay)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnReset)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSave)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnReset))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(504, 468));
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(linkInputDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(linkInputDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(linkInputDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(linkInputDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new linkInputDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtDisplay;
    private javax.swing.JTextArea txtDoc;
    private javax.swing.JTextField txtURL;
    // End of variables declaration                   

    @Override
    public void actionPerformed(ActionEvent ae) {
        Object source = ae.getSource();
        if(source == btnReset)
            startOver();
        else if(source == btnAdd) {
            String url = txtURL.getText();
            String txt = txtDisplay.getText();
            addContent(url, txt);
        }

            
        else if(source == btnSave)
            save();
    }
    
    public void startOver(){
        txtDoc.setText(boilerplate);
        txtDisplay.setText("");
        txtURL.setText("");
    }
    
    public void addContent(String... content){

        String url = content[0];
        String txt = content[1];

        if(url.isEmpty())
            return;
        try{
            StringBuilder sb = new StringBuilder(64);
            sb.append("\t\t\t<a href=\"");
            sb.append(url);
            sb.append("\">");
            sb.append(txt);
            sb.append("</a>\n");
            txtDoc.insert(sb.toString(), txtDoc.getText().indexOf("</nav>")-1);
            txtDisplay.setText("");
            txtURL.setText("");
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Unable to add link - missing </nav>");
        }
    }
    
    public void save(){
        JFileChooser chooser = new JFileChooser();
        int retValue = chooser.showSaveDialog(this);
        if(retValue == JFileChooser.APPROVE_OPTION){
            File f = chooser.getSelectedFile();
            try{
                FileOutputStream fos = new FileOutputStream(f);
                String str = txtDoc.getText();
                fos.write(str.getBytes());
                fos.close();
            }catch(Exception e){
                JOptionPane.showMessageDialog(this,"Unable to save file");
            }
        }
    }
}

